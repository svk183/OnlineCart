"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const wp = require("@cypress/webpack-preprocessor");
const tsconfig_paths_webpack_plugin_1 = require("tsconfig-paths-webpack-plugin");
const nodeExternals = require("webpack-node-externals");
function preprocessTypescript(config) {
    if (!config.env.tsConfig) {
        throw new Error('Please provide an absolute path to a tsconfig.json as cypressConfig.env.tsConfig');
    }
    return wp({
        webpackOptions: getWebpackConfig(config)
    });
}
exports.preprocessTypescript = preprocessTypescript;
function getWebpackConfig(config) {
    const extensions = ['.ts', '.tsx', '.mjs', '.js', '.jsx'];
    return {
        resolve: {
            extensions,
            plugins: [
                new tsconfig_paths_webpack_plugin_1.TsconfigPathsPlugin({
                    configFile: config.env.tsConfig,
                    extensions
                })
            ]
        },
        module: {
            rules: [
                {
                    test: /\.(j|t)sx?$/,
                    loader: 'ts-loader',
                    exclude: [/node_modules/],
                    options: {
                        configFile: config.env.tsConfig,
                        // https://github.com/TypeStrong/ts-loader/pull/685
                        experimentalWatchApi: true
                    }
                }
            ]
        },
        plugins: [],
        externals: [nodeExternals()]
    };
}
exports.getWebpackConfig = getWebpackConfig;
