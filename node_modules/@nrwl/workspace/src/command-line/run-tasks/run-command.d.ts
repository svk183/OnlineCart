import { DependencyGraph, NxJson, ProjectNode } from '../shared';
import { Task, TasksRunner } from '../../tasks-runner/tasks-runner';
import { ReporterArgs } from './default-reporter';
import { Arguments, Environment } from './utils';
import * as yargs from 'yargs';
declare type RunArgs = yargs.Arguments & ReporterArgs;
export declare function runCommand<T extends RunArgs>(projectsToRun: ProjectNode[], dependencyGraph: DependencyGraph, { nxArgs, overrides, targetArgs }: Arguments<T>, { nxJson, workspace }: Environment): void;
export interface TaskParams {
    project: ProjectNode;
    target: string;
    configuration: string;
    overrides: Object;
}
export declare function createTask({ project, target, configuration, overrides }: TaskParams): Task;
export declare function getRunner(runner: string | undefined, nxJson: NxJson, targetArgs: any): {
    tasksRunner: TasksRunner;
    tasksOptions: unknown;
};
export {};
