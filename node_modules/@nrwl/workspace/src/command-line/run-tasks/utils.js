"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const yargsParser = require("yargs-parser");
const shared_1 = require("../shared");
const workspace_results_1 = require("../workspace-results");
const ignoreArgs = ['$0', '_'];
function splitArgs(args, nxSpecific) {
    const nx = {};
    const targetArgs = {};
    const overrides = yargsParser(args._.slice(1));
    delete overrides._;
    Object.entries(args).forEach(([key, value]) => {
        if (nxSpecific.includes(key)) {
            nx[key] = value;
        }
        else if (!ignoreArgs.includes(key)) {
            targetArgs[key] = value;
        }
    });
    return { nxArgs: nx, targetArgs, overrides };
}
exports.splitArgs = splitArgs;
function projectHasTargetAndConfiguration(project, target, configuration) {
    if (!project.architect[target]) {
        return false;
    }
    if (!configuration) {
        return !!project.architect[target];
    }
    else {
        return (project.architect[target].configurations &&
            project.architect[target].configurations[configuration]);
    }
}
exports.projectHasTargetAndConfiguration = projectHasTargetAndConfiguration;
function readEnvironment(target) {
    const nxJson = shared_1.readNxJson();
    const workspaceJson = shared_1.readWorkspaceJson();
    const workspace = new workspace_results_1.WorkspaceResults(target);
    return { nxJson, workspaceJson, workspace };
}
exports.readEnvironment = readEnvironment;
